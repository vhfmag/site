---
import CollectionEntry from "../../components/CollectionEntry.astro";
import WebMentionDescription from "../../components/WebMentionDescription.astro";
import Collection, { type CollectionPageProp } from "../../layouts/Collection.astro";
import { formatDateISO, formatDateTime } from "../../utils/formatting";
import { generateGetStaticPathsForCollection } from "../../utils/pagination";
import { collectionName, collection } from "./notes.json";

export const getStaticPaths = generateGetStaticPathsForCollection(
	import.meta.glob("./**/*.md", { eager: true }),
	{ requireTitle: false },
);

interface Props {
	page: CollectionPageProp;
}

const { page } = Astro.props;
---

<!-- TODO: customizar pra notas -->
<Collection {...Astro.props} collectionName={collectionName}>
	{
		page.data.map(entry => (
			<CollectionEntry class="entry">
				<section set:html={entry.compiledContent()} />
				<header>
					<span>
						<a class="u-url" href={entry.url} set:text={collection} />
						{entry.frontmatter.date ? (
							<>
								publicada em
								<time
									itemprop="datePublished dateModified pubdate"
									class="dt-published"
									datetime={formatDateISO(entry.frontmatter.date)}
								>
									{formatDateTime(entry.frontmatter.date)}
								</time>
							</>
						) : null}
					</span>
					<WebMentionDescription links={entry.frontmatter.links} />
				</header>
			</CollectionEntry>
		))
	}
</Collection>

<style>
	.entry + .entry {
		margin-top: var(--s2);
		padding-top: var(--s2);
		border-top: 2px dotted var(--themeColor);
	}

	.entry section :first-child) {
		margin-top: 0;
	}

	header > :global(* + ::before) {
		content: " â€“ ";
	}
</style>
