---
import type { TraktDataEntry } from "../data/trakt";
import { formatDate } from "../utils/formatting";

interface Props {
	title: string;
	data: TraktDataEntry[];
}

const { title, data } = Astro.props;
---

<section>
	<h2>{title}</h2>
	<ul class:list={[{ watched: "plays" in data[0], watchlist: !("plays" in data[0]) }]}>
		{
			data
				.filter(el => el.images.poster)
				.map(el => (
					<li>
						<img src={el.images.poster} loading="lazy" width={200} height={285} />
						<p>
							<a href={el.url}>
								{el.data.title} ({el.data.year})
							</a>
						</p>
						{"plays" in el ? (
							<p>
								Assistido {el.plays} {el.plays === 1 ? "vez" : "vezes"} e pela
								Ãºltima vez em{" "}
								<time datetime={el.last_watched_at}>
									{formatDate(new Date(el.last_watched_at))}
								</time>
							</p>
						) : null}
					</li>
				))
		}
	</ul>
</section>

<style>
	ul {
		--poster-width: 200px;
		display: grid;
		grid-template-columns: repeat(auto-fill, var(--poster-width));
		gap: var(--s0) var(--s-1);
	}

	ul li {
		display: grid;
		gap: var(--s-2);
	}

	ul li,
	ul li * {
		text-align: left;
	}

	ul img {
		display: block;
		width: var(--poster-width);
		place-self: stretch;
		object-fit: cover;
	}

	ul li p {
		margin: 0;
	}

	@supports (grid-template-columns: subgrid) {
		ul li {
			grid-row: span 2;
			grid-template-rows: subgrid;
		}

		ul.watched li {
			grid-row: span 3;
		}
	}
</style>
