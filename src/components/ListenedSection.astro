---
import { fetchAllLastFmData } from "../data/lastFm";

interface Props {
	period: keyof Awaited<ReturnType<typeof fetchAllLastFmData>>;
	title: string;
}

const { period, title } = Astro.props;
const lastfm = await fetchAllLastFmData();
---

<section id={period} class="listened-section">
	<h2>{title}</h2>

	<section>
		<h3>Álbuns</h3>
		<ol class="ranking with-image">
			{
				lastfm[period].albums.map(album => (
					<li>
						<img src={album.image[2]["#text"]} width="174" height="174" />
						<a class="secondary" href={album.artist.url}>
							{album.artist.name}
						</a>
						<a class="primary" href={album.url}>
							{album.name}
						</a>
					</li>
				))
			}
		</ol>
	</section>

	<div class="ranking-lists">
		<section>
			<h3>Artistas</h3>
			<ol class="ranking">
				{
					lastfm[period].artists.map(artist => (
						<li>
							<a href={artist.url}>{artist.name}</a>
						</li>
					))
				}
			</ol>
		</section>

		<section>
			<h3>Músicas</h3>
			<ol class="ranking">
				{
					lastfm[period].tracks.map(track => (
						<li>
							<a href={track.url}>
								{track.name} - {track.artist.name}
							</a>
						</li>
					))
				}
			</ol>
		</section>

		<section class="columns">
			<h3>Tags</h3>
			<ol class="ranking">
				{
					lastfm[period].tags.map(tag => (
						<li>
							<a href={tag.url}>{tag.name}</a>
						</li>
					))
				}
			</ol>
		</section>
	</div>
</section>

<style>
	.listened-section + .listened-section {
		margin-top: var(--s3);
	}

	ol.ranking.with-image {
		--column-width: var(--last-fm-image-size);

		display: grid;
		gap: var(--s0);
		padding: 0;
		grid-template-columns: repeat(
			auto-fill,
			var(--column-width) var(--column-width) var(--column-width) var(--column-width)
				var(--column-width)
		);
		counter-reset: ranking;
	}

	@supports (width: min(0, 1px)) {
		ol.ranking.with-image {
			--column-width: min(
				var(--last-fm-image-size),
				100vw - (2 * var(--root-padding)) - (2 * var(--root-border-width))
			);
		}
	}

	@media (max-width: 1250px) {
		ol.ranking.with-image {
			grid-template-columns: repeat(auto-fit, var(--column-width));
		}
	}

	ol.ranking.with-image li img {
		width: 100%;
	}

	ol.ranking.with-image li {
		display: flex;
		flex-direction: column;
		position: relative;
		counter-increment: ranking;
	}

	@supports (grid-template-columns: subgrid) {
		ol.ranking.with-image li {
			grid-row: span 3;
			display: grid;
			grid-template-rows: subgrid;
			gap: var(--s-2);
		}

		ol.ranking.with-image li * {
			margin: 0;
		}
	}

	ol.ranking.with-image li::before {
		content: counter(ranking);
		position: absolute;
		top: var(--s-2);
		left: var(--s-2);
		background-color: var(--themeColor);
		border: 2px solid var(--backgroundColor);
		color: var(--backgroundColor);
		border-radius: 50%;
		height: 1.5em;
		width: 1.5em;
		box-sizing: content-box;
		text-align: center;
		font-weight: bold;
		font-variation-settings: "wght" 500;
	}

	ol.ranking li,
	ol.ranking li * {
		text-align: left;
	}

	ol.ranking li .primary {
		font-size: 0.9em;
	}

	ol.ranking li .secondary {
		font-size: 0.7em;
	}

	section.columns {
		grid-column: span 2;
	}

	section.columns ol.ranking {
		columns: 2 var(--last-fm-image-size);
	}

	.ranking-lists {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(200px, auto));
		grid-gap: 1em;
	}

	@media (max-width: 600px) {
		.ranking-lists {
			display: block;
		}
	}
</style>
